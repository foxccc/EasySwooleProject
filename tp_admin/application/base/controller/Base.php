<?php
/**
 * Created by PhpStorm.
 * User: CYKn
 * Date: 2019/5/25 0025
 * Time: 下午 3:13
 */
namespace app\base\controller;

use think\Cache;
use think\Controller;
use app\base\controller\ReturnCode;
use app\common\tools;
use think\Session;
use think\Loader;

abstract class Base extends Controller
{
    protected $log=[];
    protected $saveLog = false ;
    //权限验证
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $rule = 'admin/index/index';
        //有权限，返回true
        //用户id,方法
        $isRule = (new tools\Auth())->check('2',$rule);
        if (!$isRule) {
            $this->error();
        }
    }

    static public function showReturnCode($code = '', $data = [], $msg = '')
    {
        $return_data = [
            'code' => '500',
            'msg' => '未定义消息',
            'data' => $code == 1001 ? $data : [],
        ];
        if (empty($code)) return $return_data;
        $return_data['code'] = $code;
        if(!empty($msg)){
            $return_data['msg'] = $msg;
        }else if (isset(ReturnCode::$return_code[$code]) ) {
            $return_data['msg'] = ReturnCode::$return_code[$code];
        }
        return $return_data;
    }

    static public function showReturnCodeWithOutData($code = '', $msg = '')
    {
        return self::showReturnCode($code,[],$msg);
    }

    protected function buildParam($array)
    {
        $data=[];
        if (is_array($array)&&!empty($array)){
            foreach( $array as $item=>$value ){
                $data[$item] = trim($this->request->param($value));
            }
        }
        return $data;
    }

    protected function getData(){
        if ($this->request->isPost()){
            return $this->request->post();
        }else{
            return $this->request->get();
        }
    }

    protected function addLog($code='',$msg='')
    {
        $this->log[] = [
            'url' => $this->request->url(true),
            'method' => $this->request->method(),
            'controller' => $this->request->controller(),
            'data' => $this->getData(),
            'ip' => $this->request->ip(),
            'code' => $code,
            'desc' => $msg,
        ];
    }

    protected function toSaveLog(){
        $this->saveLog = true ;
        $this->addLog();
    }

    protected function showReturnCodeWithSaveLog($code = '', $data = [], $msg = ''){
        $this->saveLog = true ;
        $this->addLog($code,$msg);
        return self::showReturnCode($code, $data, $msg);
    }
}